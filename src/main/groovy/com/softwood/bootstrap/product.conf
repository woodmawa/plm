package com.softwood.bootstrap

import com.softwood.portfolio.*

import java.util.concurrent.ConcurrentLinkedQueue

// set this value to determine the order that config files will be run
// any globally required value should be set to the binding
// ensure that any dependant scripts run with higher order value than the script that
// sets the required value in the binding.  Multiple non dependant scripts can run at same level
def runConfigInOrder = 1


//setup a product class and some products of that class
vfProductClasses = new ConcurrentLinkedQueue()

ProductClass pclass = new ProductClass (productClass: "Node", productType: "Phone")
def phones = pclass
vfProductClasses << pclass
pclass = new ProductClass (productClass: "Node", productType: "Network Equipment")
def router = pclass
vfProductClasses << pclass
pclass = new ProductClass (productClass: "Service", productType: "Services")
vfProductClasses << pclass
pclass = new ProductClass (productClass: "Network", productType: "Ethernet")
vfProductClasses << pclass
pclass = new ProductClass (productClass: "Network", productType: "MPLS")
vfProductClasses << pclass

//setup a couple of basic products
vfProductsMaster = new ConcurrentLinkedQueue()
Product product = new Product (code: "123", name:"iPhone", SKU:"ph/123", productClass:phones)
vfProductsMaster << product

product = new Product (code: "125", name:"Cisco ASR 1001-x", SKU:"c-r/1001x", productClass:router)
vfProductsMaster << product
