package com.softwood.bootstrap.config

import com.softwood.domain.portfolio.ProductHierarchy

import java.util.concurrent.ConcurrentLinkedQueue

// set this value to determine the order that config files will be run
// any globally required value should be set to the binding
// ensure that any dependant scripts run with higher order value than the script that
// sets the required value in the binding.  Multiple non dependant scripts can run at same level
def runConfigInOrder = 2

vfPortfolio.productHierarchies = new ConcurrentLinkedQueue<ProductHierarchy>()
//enable getting list of root hierarchies
vfPortfolio.productHierarchies.metaClass.list = {delegate.toArray (ProductHierarchy[])}

//define one root hierarchy called networks
def root = new ProductHierarchy(name: "networks", level: 1)
vfPortfolio.productHierarchies << root

def n = new ProductHierarchy(name: "Ethernet", level: 2.1)
def l2 = n
root.addChild(n )

n = new ProductHierarchy(name: "MPLS", level:2.2)
root.addChild(n)


def l3_1 = new ProductHierarchy(name: "VPN Connection")
l2.addChild(l3_1)

def l3_2 = new ProductHierarchy(name: "MPLS VPN")
l2.addChild(l3_2)

def root2 = new ProductHierarchy(name: "Mobile Devices", level: 1)
vfPortfolio.productHierarchies << root2

def n2 = new ProductHierarchy(name: "Phones", level: 2.1)
def r2_l2 = n2
root2.addChild(n2 )

def n3 = new ProductHierarchy(name: "Smart Phones", level: 3.1)
def r2_l3 = n3
r2_l2.addChild(n3 )